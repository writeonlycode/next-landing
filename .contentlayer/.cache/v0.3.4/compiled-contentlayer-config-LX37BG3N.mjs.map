{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  defineNestedType,\n  makeSource,\n} from \"contentlayer/source-files\";\n\n// Type Site contains information about the website, such as: the title of the\n// website, a description, an associated image, among others.\nexport const Site = defineDocumentType(() => ({\n  name: \"Site\",\n  description:\n    \"Type Site contains information about the website, such as the title and a description of the website.\",\n  contentType: \"data\",\n  filePathPattern: \"/config/site.yaml\",\n  isSingleton: true,\n  fields: {\n    title: { type: \"string\", required: true },\n    description: { type: \"string\", required: true },\n    baseUrl: { type: \"string\", required: true },\n    languageCode: { type: \"string\", required: true },\n  },\n}));\n\n// Type Menu contains information about the website menu and its entries,\n// including their label and link.\nexport const Menu = defineDocumentType(() => ({\n  name: \"Menu\",\n  description:\n    \"Type Menu contains information about the website menu and its entries, including their label and link.\",\n  contentType: \"data\",\n  filePathPattern: \"/config/menu.yaml\",\n  isSingleton: true,\n  fields: {\n    title: { type: \"string\", required: false },\n    entries: { type: \"list\", of: Link, required: true },\n  },\n}));\n\nconst Link = defineNestedType(() => ({\n  name: \"Link\",\n  fields: {\n    label: { type: \"string\", required: true },\n    link: { type: \"string\", required: false },\n    blank: { type: \"boolean\", required: false },\n  },\n}));\n\n// Type Hero contains information about the website Hero section.\nexport const Hero = defineDocumentType(() => ({\n  name: \"Hero\",\n  description: \"Type Hero contains information about the website Hero section.\",\n  contentType: \"data\",\n  filePathPattern: \"/data/hero.yaml\",\n  isSingleton: true,\n  fields: {\n    title: { type: \"string\", required: true },\n    lead: { type: \"string\", required: true },\n    backgroundImage: { type: \"string\", required: true },\n  },\n}));\n\n// Type History contains information about the website History section.\nexport const History = defineDocumentType(() => ({\n  name: \"History\",\n  description:\n    \"Type History contains information about the website History section.\",\n  contentType: \"data\",\n  filePathPattern: \"/data/history.yaml\",\n  isSingleton: true,\n  fields: {\n    pretitle: { type: \"string\", required: true },\n    title: { type: \"string\", required: true },\n    text: { type: \"string\", required: true },\n    image: { type: \"string\", required: true },\n  },\n}));\n\n// Type About contains information about the website About section.\nexport const About = defineDocumentType(() => ({\n  name: \"About\",\n  description:\n    \"Type About contains information about the website About section.\",\n  contentType: \"data\",\n  filePathPattern: \"/data/about.yaml\",\n  isSingleton: true,\n  fields: {\n    pretitle: { type: \"string\", required: true },\n    title: { type: \"string\", required: true },\n    text: { type: \"string\", required: true },\n    image: { type: \"string\", required: true },\n    brands: { type: \"nested\", of: Brands, required: true },\n  },\n}));\n\nconst Brands = defineNestedType(() => ({\n  name: \"Brands\",\n  fields: {\n    title: { type: \"string\", required: true },\n    items: { type: \"list\", of: Brand, required: true },\n  },\n}));\n\nconst Brand = defineNestedType(() => ({\n  name: \"Brand\",\n  fields: {\n    label: { type: \"string\", required: true },\n    image: { type: \"string\", required: true },\n  },\n}));\n\n// Type Services contains information about the website Services section.\nexport const Services = defineDocumentType(() => ({\n  name: \"Services\",\n  description:\n    \"Type Services contains information about the website Services section.\",\n  contentType: \"data\",\n  filePathPattern: \"/data/services.yaml\",\n  isSingleton: true,\n  fields: {\n    pretitle: { type: \"string\", required: true },\n    title: { type: \"string\", required: true },\n    text: { type: \"string\", required: true },\n    image: { type: \"string\", required: true },\n  },\n}));\n\n// Type Footer contains information about the website Footer section.\nexport const Footer = defineDocumentType(() => ({\n  name: \"Footer\",\n  description:\n    \"Type Footer contains information about the website Footer section.\",\n  contentType: \"data\",\n  filePathPattern: \"/data/footer.yaml\",\n  isSingleton: true,\n  fields: {\n    menu: { type: \"nested\", of: Menu, required: true },\n    hours: { type: \"nested\", of: Menu, required: true },\n    location: { type: \"nested\", of: Menu, required: true },\n    copyright: { type: \"nested\", of: Menu, required: true },\n  },\n}));\n\n// Type Contact contains information about the website Contact page.\nexport const Contact = defineDocumentType(() => ({\n  name: \"Contact\",\n  description:\n    \"Type Contact contains information about the website Contact section.\",\n  contentType: \"data\",\n  filePathPattern: \"/data/contact.yaml\",\n  isSingleton: true,\n  fields: {\n    pretitle: { type: \"string\", required: true },\n    title: { type: \"string\", required: true },\n    text: { type: \"string\", required: true },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"content\",\n  documentTypes: [Site, Menu, Hero, History, About, Services, Footer, Contact],\n});\n"],
  "mappings": "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",
  "names": []
}
